name: Deploy to Cloud Run
on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    # 👉 여기서는 env 안에서 env 참조 금지! vars.*만 사용해서 완성값을 넣어주세요.
    env:
      PROJECT_ID: ${{ vars.GCP_PROJECT_ID }}
      REGION: ${{ vars.REGION }}
      REPO: ${{ vars.ARTIFACT_REPO }}
      IMAGE_NAME: ${{ vars.IMAGE_NAME }}
      SERVICE_NAME: ${{ vars.SERVICE_NAME }}
      RUNTIME_SA: skylife-runtime@${{ vars.GCP_PROJECT_ID }}.iam.gserviceaccount.com
      GCS_BUCKET: ${{ vars.GCS_BUCKET_NAME }}
      IMAGE_URI: ${{ vars.REGION }}-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/${{ vars.ARTIFACT_REPO }}/${{ vars.IMAGE_NAME }}

    steps:
      - name: 1) Checkout
        uses: actions/checkout@v4

      # (옵션1) 서비스계정 키 JSON 사용
      - name: 2) Auth to Google Cloud (SA JSON)
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      # (옵션2) WIF 사용 시 위 스텝 대신 아래 주석 해제 + repository secrets에 GCP_WIF_PROVIDER 등록
      # permissions:
      #   id-token: write
      #   contents: read
      # - name: 2) Auth to Google Cloud (WIF)
      #   uses: google-github-actions/auth@v2
      #   with:
      #     workload_identity_provider: ${{ secrets.GCP_WIF_PROVIDER }}
      #     service_account: github-deployer@${{ env.PROJECT_ID }}.iam.gserviceaccount.com

      - name: 3) Setup gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: 4) Configure Docker auth (Artifact Registry)
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet

      - name: 5) Build image
        run: docker build -t $IMAGE_URI:${{ github.sha }} -t $IMAGE_URI:latest .

      - name: 6) Push image
        run: |
          docker push $IMAGE_URI:${{ github.sha }}
          docker push $IMAGE_URI:latest

      - name: 7) Deploy to Cloud Run
        run: |
          gcloud run deploy $SERVICE_NAME \
            --image=$IMAGE_URI:${{ github.sha }} \
            --platform=managed \
            --region=$REGION \
            --allow-unauthenticated \
            --service-account=$RUNTIME_SA \
            --set-env-vars "SPRING_PROFILES_ACTIVE=prod,gcs.bucket-name=$GCS_BUCKET"
